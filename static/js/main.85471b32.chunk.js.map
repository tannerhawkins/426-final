{"version":3,"sources":["Weather.js","Loader.js","Clock.js","News.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","newLat","newLon","newWeather","useState","finalMessage","setMessage","weather","setWeather","setLat","setLon","setLow","setHigh","currTemp","setCurrTemp","units","main","setMain","description","setDescription","count","setCount","code","a","document","getElementById","style","visibility","axios","get","then","result","data","temp_min","temp_max","temp","console","log","onSuccess","positionNew","coords","latitude","longitude","getWeather","getLocation","onError","navigator","geolocation","getCurrentPosition","window","addEventListener","once","useEffect","innerText","className","id","Loader","Clock","date","Date","getHours","getMinutes","time","setTime","minutes","toString","length","News","key","news","setNews","newNews","images","App","image","setImage","setTimeout","curr","backgroundImage","backgroundRepeat","backgroundSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.85471b32.chunk.js","sourcesContent":["import { Component, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Weather() {\n\n    const [finalMessage, setMessage] = useState(\"\");\n    const [weather, setWeather] = useState(null);\n    const [lat, setLat] = useState(null);\n    const [lon, setLon] = useState(null);\n    const [low, setLow] = useState(null);\n    const [high, setHigh] = useState(null);\n    const [currTemp, setCurrTemp] = useState(null);\n    const [units, setUnits] = useState(\"imperial\");\n    const [main, setMain] = useState(null);\n    const [description, setDescription] = useState(null);\n    const [count, setCount] = useState(0);\n    const code = \"cf0cdab436e7a78c55ebf2423ebb5eab\";\n    let newLat;\n    let newLon;\n    let newWeather;\n    let newLow;\n    let newHigh;\n    let newCurrTemp;\n    let newMain;\n    let newDescription;\n\n    if (count === 0){\n        window.addEventListener(\"load\", getLocation, {once : true});\n        setCount(1);\n    }\n\n    useEffect(() => {\n        document.getElementById(\"location\").innerText = finalMessage;\n    });\n\n    async function getWeather() {\n        if (newLat != null & newLon != null) {\n            try {\n                document.getElementById(\"loader\").style.visibility = \"visible\";\n                await axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${newLat}&lon=${newLon}&appid=${code}&units=${units}`).then(result => {\n                    setWeather(result);\n                    newWeather = result;\n                    setLow(newWeather.data.main.temp_min);\n                    newLow = newWeather.data.main.temp_min;\n                    setHigh(newWeather.data.main.temp_max);\n                    newHigh = newWeather.data.main.temp_max;\n                    setCurrTemp(newWeather.data.main.temp);\n                    newCurrTemp = newWeather.data.main.temp;\n                    setMain(newWeather.data.weather[0].main);\n                    newMain = newWeather.data.weather[0].main;\n                    setDescription(newWeather.data.weather[0].description);\n                    newDescription = newWeather.data.weather[0].description;\n                });\n                document.getElementById(\"loader\").style.visibility = \"hidden\";\n            }\n            catch (error) {\n                document.getElementById(\"loader\").style.visibility = \"hidden\";\n                console.log(error);\n            }\n        }\n    }\n\n\n    function supports() {\n        if (!navigator.geolocation) {\n            return false;\n        }\n        return true;\n    }\n\n    function onSuccess(positionNew) {\n        setLat(positionNew.coords.latitude);\n        setLon(positionNew.coords.longitude);\n        newLat = positionNew.coords.latitude;\n        newLon = positionNew.coords.longitude;\n        if (newLat != null & newLon != null) {\n            setMessage(`Your location is ${newLat}, ${newLon}`);\n            if (weather == null) { getWeather(); }\n        }\n        else {\n            getLocation();\n        }\n    }\n\n    function onError() {\n        setMessage(\"Please allow use of location or enter zip code to see weather.\");\n        console.log(\"Please allow use of location or enter zip code to see weather.\");\n    }\n\n    function getLocation() {\n        if (!supports()) {\n            setMessage(\"Your browser doesn't support geolocation, please enter city or zipcode.\");\n        }\n        else {\n            console.log(\"getting\");\n            navigator.geolocation.getCurrentPosition(onSuccess, onError);\n        }\n    }\n    \n    return <div>\n        <h1 className=\"title\" id=\"location\"></h1>\n        <div id=\"weatherBox\">\n            <div id=\"weatherImage\"></div>\n            <div>{currTemp}</div>\n            <div>{main}</div>\n            <div>{description}</div>\n        </div>\n    </div>\n};\n\nexport default Weather;","import React from 'react';\n\nfunction Loader() {\n  return (\n    <div id=\"loader\" className=\"loader center\">\n      <i className=\"fa fa-spinner fa-spin fa-5x\" />\n    </div>\n  );\n}\n\nexport default Loader;","import React from 'react';\nimport { useEffect, useState } from \"react\";\n\n\nfunction Clock() {\n    let date = new Date();\n    const [time, setTime] = useState(`${date.getHours() % 12}:${date.getMinutes()}`);\n    useEffect(() => {\n        let minutes = date.getMinutes();\n        if (minutes.toString().length == 1){\n            minutes = `0${minutes}`;\n        }\n        setTime(`${date.getHours() % 12}:${minutes}`);\n    })\n    return (\n        <div id=\"time\">{time}</div>\n    );\n}\n\nexport default Clock;","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nfunction News() {\n    const key = '2R53iX0gPy4uF4HNx8VhyTJ6yNZ9dCT3';\n    const call = `https://api.nytimes.com/svc/topstories/v2/us.json?api-key=${key}`;\n    const [news, setNews] = useState(null);\n    let newNews = null;\n    window.addEventListener(\"load\", getNews, {once : true});\n\n    async function getNews(){\n        if (news == null && newNews == null) {\n            try {\n                await axios.get(`https://api.nytimes.com/svc/topstories/v2/us.json?api-key=${key}`).then(result => { setNews(result); newNews = result;});\n            }\n            catch (error) {\n                console.log(\"error\");\n                console.log(error);\n            }\n        }\n    }\n    return (\n        <div id=\"news\"></div>\n    );\n}\n\nexport default News;","import './App.css';\nimport { useEffect, useState } from \"react\";\nimport Weather from \"./Weather\";\nimport Loader from \"./Loader\";\nimport Clock from \"./Clock\";\nimport News from \"./News\";\n\nconst images = [\n  \"./images/1.jpg\",\n  \"./images/2.jpg\",\n  \"./images/3.jpg\",\n  \"./images/4.jpg\",\n]\n\nfunction getNext(curr){\n  if(curr+1 === images.length){\n    return 0;\n  }\n  else {\n    return curr+1;\n  }\n}\n\nfunction App() {\n  const [image, setImage] = useState(0);\n\n  setTimeout(function nextImage() {\n    setImage(getNext(image));\n  }, 10000)\n\n\n  return (\n    <div className=\"App\" style={{backgroundImage: `url(${images[image]})`, backgroundRepeat: 'no-repeat', backgroundSize: \"cover\"}}>\n      <Weather />\n      <Loader/>\n      <Clock />\n      <News />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}